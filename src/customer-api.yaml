openapi: 3.0.0
info:
  title: TMF629 Study
  description: CRUD operations for Customer
  version: 1.0.0
servers:
  - url: http://localhost:8080/customerManagement/v1
tags:
  - name: customer
    description: Customer's operations
paths:
  /customer:
    get:
      tags:
        - customer
      summary: Get all customers
      description: Get all customers
      parameters:
        - name: fields
          in: query
          description: Comma-separated properties to be provided in response
          required: false
          schema:
            type: string
        - name: offset
          in: query
          description: Requested index for start of resources to be provided in response
          required: false
          schema:
            type: integer
            default: 0
        - name: limit
          in: query
          description: Requested number of resources to be provided in response
          required: false
          schema:
            type: integer
            default: 20
        - name: name
          in: query
          description: Filter customers by name (partial match, case insensitive).
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successfully get all customers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerResponse'
    post:
      tags:
        - customer
      summary: Create new customer
      description: Create new customer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerRequest'
      responses:
        '200':
          description: Successfully create new customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
  /customer/{id}:
    get:
      tags:
        - customer
      summary: Find customer by ID
      description: Return single customer
      parameters:
        - name: id
          in: path
          description: ID of customer
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Comma-separated properties to be provided in response
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successfully get a customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
    patch:
      tags:
        - customer
      summary: Partially update customer by ID
      description: Partially update customer
      parameters:
        - name: id
          in: path
          description: ID of customer
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerRequest'
      responses:
        '200':
          description: Successfully performed a partial update on a customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '404':
          description: Not found request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
    delete:
      tags:
        - customer
      summary: Delete customer by ID
      description: Delete customer by ID
      parameters:
        - name: id
          in: path
          description: ID of customer
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content – customer deleted successfully
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/BadRequestResponse'
                  - type: object
                    properties:
                      reason:
                        example: Illegal argument provided
                      message:
                        example: ID abc is not a valid ID
        '404':
          description: Not found request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
components:
  schemas:
    # Customer
    CustomerRequest:
      type: object
      required:
        - '@type'
        - name
        - engagedParty
      properties:
        account:
          type: array
          description: List of accounts associated with the customer.
          items:
            $ref: '#/components/schemas/AccountRef'
        agreement:
          type: array
          description: Contracts or formal arrangements between the customer and the service provider.
          items:
            $ref: '#/components/schemas/AgreementRef'
        characteristic:
          type: array
          description: List of additional information to describe the customer.
          items:
            $ref: '#/components/schemas/Characteristic'
        contactMedium:
          type: array
          description: List of communication channels the customer prefers or uses (e.g., phone, address).
          items:
            oneOf:
              - $ref: '#/components/schemas/PhoneContactMedium'
              - $ref: '#/components/schemas/GeographicAddressContactMedium'
        creditProfile:
          type: array
          description: Customer’s credit scoring or credit-related information.
          items:
            $ref: '#/components/schemas/CreditProfile'
        description:
          type: string
          description: Free-text description of the customer.
          example: Long-term customer with premium support.
        engagedParty:
          $ref: '#/components/schemas/PartyRef'
        name:
          type: string
          description: Name or label of the customer.
          example: Moon Football Club
        partyRoleSpecification:
          $ref: '#/components/schemas/PartyRoleSpecificationRef'
        paymentMethod:
          type: array
          description: List of payment methods associated with the customer.
          items:
            $ref: '#/components/schemas/PaymentMethodRef'
        relatedParty:
          type: array
          description: List of parties or party roles related to this customer (e.g., account manager, billing contact).
          items:
            $ref: '#/components/schemas/RelatedPartyOrPartyRoleRef'
        role:
          type: string
          description: Role of the engaged party, optionally refining or replacing partyRoleSpecification.
          example: BillingAccountOwner
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@type':
          type: string
          description: Indicates the concrete type of the customer entity.
          enum: [Customer]
    CustomerResponse:
      type: object
      properties:
        total:
          type: number
          description: Total number of returned customers.
          example: 10
        items:
          description: List of returned customers.
          allOf:
            - $ref: '#/components/schemas/CustomerRequest'
            - type: object
              properties:
                href:
                  type: string
                  description: Hyperlink reference to the customer resource.
                  example: http://localhost:8080/customerManagement/v1/customer/507f1f77bcf86cd799439011
                id:
                  type: string
                  description: Unique identifier for the customer in MongoDB, represented in ObjectId format (24 hex characters).
                  pattern: '^[a-fA-F0-9]{24}$'
                  example: 507f1f77bcf86cd799439011
                status:
                  type: string
                  description: Lifecycle status of the customer.
                  enum: [ Created, Active, InActive, Suspended, Terminated, Pending ]
                  example: Created
                statusReason:
                  type: string
                  description: Provides additional context or explanation for the customer's current status.
                  enum:
                    - Customer not responding
                    - Payment overdue
                    - Exceeded usage limits
                    - Customer requested cancellation
                    - Contract expired
                    - Awaiting identity verification
                    - ...
                '@baseType':
                  type: string
                  description: The base type of Customer object, in this case is PartyRole.
                  enum: [ PartyRole ]
                '@schemaLocation':
                  type: string
                  description: A URI pointing to the location of the schema that describes the structure of this resource.
                  example: https://example.com/schemas/customer

    ## Customer's subtypes
    AccountRef:
      type: object
      description: Reference to a customer account, typically used for billing or service tracking purposes.
      properties:
        href:
          type: string
        id:
          type: string
        name:
          type: string
        '@baseType':
          type: string
        '@referredType':
          type: string
          enum: [BillingAccount, SettlementAccount]
        '@schemaLocation':
          type: string
        '@type':
          type: string
    AgreementRef:
      type: object
      description: Reference to an agreement defining the terms and conditions between the customer and the service provider.
      properties:
        href:
          type: string
        id:
          type: string
        name:
          type: string
        '@baseType':
          type: string
        '@referredType':
          type: string
        '@schemaLocation':
          type: string
        '@type':
          type: string
    Characteristic:
      type: object
      description: Describes the characteristic of a customer.
      properties:
        characteristicRelationship:
          $ref: '#/components/schemas/CharacteristicRelationship'
        id:
          type: string
          description: Unique identifier of the characteristic.
        name:
          type: string
          description: Name of the characteristic.
        valueType:
          type: string
          description: Data type of the value of the characteristic.
        '@baseType':
          type: string
        '@schemaLocation':
          type: string
        '@type':
          type: string
    ContactMedium:
      type: object
      description: Indicates the contact medium that could be used to contact the customer.
      properties:
        contactType:
          type: string
          description: A label to qualify or categorize the contact, not to describe how the contact is made (e.g., phone, email).
          enum: [ homePhone, homeAddress ]
        id:
          type: string
          description: Identifier for this contact medium.
        preferred:
          type: boolean
          description: If true, indicates that is the preferred contact medium.
          example: true
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          type: string
        '@schemaLocation':
          type: string
        '@type':
          type: string
          enum:
            - EmailContactMedium
            - FaxContactMedium
            - GeographicAddressContactMedium
            - PhoneContactMedium
            - SocialContactMedium
    CreditProfile:
      type: object
      description: Credit profile of the party, including credit score and history. The first item is the current profile by default.
      properties:
        creditProfileDate:
          type: string
          format: date-time
          description: The date the profile was established.
        creditRiskRating:
          type: integer
          description: This is an integer whose value is used to rate the risk.
        creditScore:
          type: integer
          description: A measure of creditworthiness based on factors like income and credit history.
        href:
          type: string
        id:
          type: string
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          type: string
        '@schemaLocation':
          type: string
        '@type':
          type: string
    PartyRef:
      type: object
      description: A Party reference.
      required:
        - '@type'
        - id
      properties:
        href:
          type: string
          example: https://host:port/tmf-api/partyManagement/v5/organization/500
        id:
          type: string
          example: 500
        name:
          type: string
          example: Happy Travellers
        '@baseType':
          type: string
        '@referredType':
          type: string
          enum: [ Individual, Organization ]
          example: Organization
        '@schemaLocation':
          type: string
        '@type':
          type: string
          enum: [ PartyRef ]
    PartyRoleSpecificationRef:
      type: object
      description: Reference to a party role specification, detailing the role a customer plays in a specific context.
      properties:
        href:
          type: string
        id:
          type: string
        name:
          type: string
        '@baseType':
          type: string
        '@referredType':
          type: string
        '@schemaLocation':
          type: string
        '@type':
          type: string
    PaymentMethodRef:
      type: object
      description: Reference to a payment method, such as direct debit.
      properties:
        href:
          type: string
        id:
          type: string
        name:
          type: string
        '@baseType':
          type: string
        '@referredType':
          type: string
        '@schemaLocation':
          type: string
        '@type':
          type: string
    RelatedPartyOrPartyRoleRef:
      type: object
      description: Reference to a related party or party role linked to the entity.
      properties:
        partyOrPartyRole:
            $ref: '#/components/schemas/PartyOrPartyRole'
        role:
          type: string
        '@baseType':
          type: string
        '@referredType':
          type: string
        '@schemaLocation':
          type: string
        '@type':
          type: string
    TimePeriod:
      type: object
      description: A period of time, either as a deadline (endDateTime only) a startDateTime only, or both.
      properties:
        startDateTime:
          type: string
          description: Start of the time period in ISO 8601 format
          format: date-time
          example: "2023-01-01T00:00:00Z"
        endDateTime:
          type: string
          description: End of the time period in ISO 8601 format
          format: date-time
          example: "2023-12-31T23:59:59Z"

    ### Characteristic subtypes
    CharacteristicRelationship:
      type: object
      description: Another Characteristic that is related to the current Characteristic;
      properties:
        id:
          type: string
          description: Unique identifier of the characteristic.
        relationshipType:
          type: string
          description: The type of relationship.
        '@baseType':
          type: string
        '@schemaLocation':
          type: string
        '@type':
          type: string

    ### ContactMedium's subtypes
    EmailContactMedium:
      allOf:
        - $ref: '#/components/schemas/ContactMedium'
        - type: object
          properties:
            emailAddress:
              type: string
              description: Full email address in standard format.
    FaxContactMedium:
      allOf:
        - $ref: '#/components/schemas/ContactMedium'
        - type: object
          properties:
            faxNumber:
              type: string
              description: The fax number of the contact.
    GeographicAddressContactMedium:
      allOf:
        - $ref: '#/components/schemas/ContactMedium'
        - type: object
          properties:
            city:
              type: string
              example: Paris
            contactType:
              example: homeAddress
            country:
              type: string
              example: France
            geographicAddress:
              $ref: '#/components/schemas/GeographicAddressRef'
            postCode:
              type: string
              example: 0123
            stateOrProvince:
              type: string
              description: State or province.
            street1:
              type: string
              description: Describes the street.
              example: 15 Rue des Canards
            street2:
              type: string
              description: Complementary street description.
    PhoneContactMedium:
      allOf:
        - $ref: '#/components/schemas/ContactMedium'
        - type: object
          properties:
            '@type':
              example: PhoneContactMedium
            contactType:
              example: homePhone
            phoneNumber:
              type: string
              example: 01 09 75 83 51
    SocialContactMedium:
      allOf:
        - $ref: '#/components/schemas/ContactMedium'
        - type: object
          properties:
            socialNetworkId:
              type: string
              description: Identifier as a member of a social network.

    ### RelatedPartyOrPartyRole's subtypes
    PartyOrPartyRole:
      type: object
      description: Reference to either a party or a party role associated with the entity.

    #### GeographicAddressContactMedium's subtypes
    GeographicAddressRef:
      type: object
      description: Reference to a Geographic Address.
      properties:
        href:
          type: string
        id:
          type: string
        name:
          type: string
        '@baseType':
          type: string
        '@referredType':
          type: string
        '@schemaLocation':
          type: string
        '@type':
          type: string

    # Error
    ErrorResponse:
      type: object
      properties:
        '@type':
          type: string
          enum: [ValidationError, NotFoundError]
        code:
          type: string
          enum: ['400', '404']
        reason:
          type: string
        message:
          type: string
        status:
          type: string
        referenceError:
          type: string
        '@baseType':
          type: string
          enum: [ApiError]
        '@schemaLocation':
          type: string
    ## Error's subtypes
    BadRequestResponse:
      allOf:
        - $ref: '#/components/schemas/ErrorResponse'
        - type: object
          properties:
            '@type':
              type: string
              enum: [ValidationError]
            code:
              type: string
              enum: ['400']
            reason:
              type: string
              example: Invalid input provided
            message:
              type: string
              example: "Invalid value 'wrong-type' for field 'account.@referredType'. Allowed values: BillingAccount, SettlementAccount"
            status:
              type: string
              enum: ['400']
            referenceError:
              type: string
              example: https://example.com/errors/bad-request
            '@schemaLocation':
              type: string
              example: https://example.com/error-schema
    NotFoundResponse:
      allOf:
        - $ref: '#/components/schemas/ErrorResponse'
        - type: object
          properties:
            '@type':
              enum: [NotFoundError]
            code:
              enum: ['404']
            reason:
              example: The requested resource was not found
            message:
              example: ID 67fe23902a287f45436f1673 not exists
            status:
              type: string
              enum: ['404']
            referenceError:
              example: https://example.com/errors/not-found
            '@schemaLocation':
              example: https://example.com/error-schema
