openapi: 3.0.0
info:
  title: User Management API
  description: CRUD operations for User
  version: 1.0.0
servers:
  - url: http://localhost:8080
paths:
  /users:
    post:
      summary: Create new user
      description: Add new user to the system
      operationId: createUser
      requestBody:
        description: User information
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid request
    get:
      summary: Get all users
      description: Get all users information
      operationId: listUsers
      responses:
        '200':
          description: Succeed
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
  /users/{userId}:
    get:
      summary: Get user by Id
      description: Get information of specific user
      operationId: getUserById
      parameters:
        - name: userId
          in: path
          required: true
          description: userID
          schema:
            type: string
      responses:
        '200':
          description: Succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
    put:
      summary: Change user information
      description: Change user information based on ID
      operationId: updateUser
      parameters:
        - name: userId
          in: path
          required: true
          description: userID
          schema:
            type: string
      requestBody:
        description: Information to update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid request
        '404':
          description: User not found
    delete:
      summary: Delete user
      description: Delete user based on ID
      operationId: deleteUser
      parameters:
        - name: userId
          in: path
          required: true
          description: userID
          schema:
            type: string
      responses:
        '204':
          description: Succeeded
        '404':
          description: User not found
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          example: '12345'
        name:
          type: string
          example: 'johndoe'
        age:
          type: number
          example: 25
